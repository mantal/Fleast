@page "/"
@using Groww.World
@using Action = Groww.World.Action

<h1>@_area.Biome.Name (@_game.Tribe.PosX, @_game.Tribe.PosY)</h1>

<div>
    @foreach (var human in _game.Tribe.Humans)
    {
        <div>@human.Name</div>
    }
</div>

<div>
    @foreach (var resource in _game.Tribe.Resources)
    {
        <div>@resource.Name: @resource.Amount / @resource.Max</div>
    }
</div>

<button @onclick="_ => Move(0, 1)">North</button>
<br />
<button @onclick="_ => Move(1, 0)">West</button>
<button @onclick="_ => Move(-1, 0)">East</button>
<br />
<button @onclick="_ => Move(0, -1)">South</button>
<br />

<div>
    @foreach (var action in _game.Tribe.Actions.Where(a => a.IsAvailable(_area)))
    {
        <button @onclick="_ => Action(action)">@action.Name</button>
    }
</div>

<br />
<button @onclick="@PassTurn">Wait</button>

@code
{
    protected override void OnInitialized()
    {
        _game = new Game();
        _game.Init();
        _area = _game.World.Areas[_game.Tribe.PosX, _game.Tribe.PosY];
    }

    private Game _game;
    private Area _area;

    private void Move(int relativeX, int relativeY)
    {
        _game.Tribe.PosX += relativeX;
        _game.Tribe.PosY += relativeY;
        _area = _game.World.Areas[_game.Tribe.PosX, _game.Tribe.PosY];
        PassTurn(null);
    }

    private void PassTurn(EventArgs _)
    {
        _game.Tick();
        Console.WriteLine($"{string.Join("|", _area.Resources.Select(r => r.Name + r.Amount))}");
}

    private void Action(Action action)
    {
        action.Do(_area, _game.Tribe);
        PassTurn(null);
    }
}
